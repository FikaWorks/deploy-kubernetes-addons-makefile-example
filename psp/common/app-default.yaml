apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: app:default
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - app-default

---

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: app-default
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  # Don't allow privileged pods
  privileged: false

  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false

  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  requiredDropCapabilities:
    - ALL

  hostNetwork: false
  hostIPC: false
  hostPID: false

  runAsUser:
    # Require the container to run without root privileges.
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  volumes:
    - secret
